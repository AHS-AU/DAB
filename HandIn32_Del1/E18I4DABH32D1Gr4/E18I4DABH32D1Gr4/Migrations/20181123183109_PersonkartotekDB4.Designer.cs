// <auto-generated />
using E18I4DABH32D1Gr4.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E18I4DABH32D1Gr4.Migrations
{
    [DbContext(typeof(PersonContext))]
    [Migration("20181123183109_PersonkartotekDB4")]
    partial class PersonkartotekDB4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("E18I4DABH32D1Gr4.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressType");

                    b.Property<int>("CityId");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("AddressId");

                    b.HasIndex("CityId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("E18I4DABH32D1Gr4.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("CountryRegion")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("CityId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("E18I4DABH32D1Gr4.Models.Email", b =>
                {
                    b.Property<int>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("EmailId");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("E18I4DABH32D1Gr4.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<int>("EmailId");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("PersonId");

                    b.HasIndex("AddressId");

                    b.HasIndex("EmailId")
                        .IsUnique();

                    b.ToTable("People");
                });

            modelBuilder.Entity("E18I4DABH32D1Gr4.Models.Address", b =>
                {
                    b.HasOne("E18I4DABH32D1Gr4.Models.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("E18I4DABH32D1Gr4.Models.Person", b =>
                {
                    b.HasOne("E18I4DABH32D1Gr4.Models.Address", "Address")
                        .WithMany("PeopleAtAddress")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("E18I4DABH32D1Gr4.Models.Email", "Email")
                        .WithOne("Person")
                        .HasForeignKey("E18I4DABH32D1Gr4.Models.Person", "EmailId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
