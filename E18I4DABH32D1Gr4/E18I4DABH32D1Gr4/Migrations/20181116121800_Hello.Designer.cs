// <auto-generated />
using System;
using E18I4DABH32D1Gr4.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E18I4DABH32D1Gr4.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20181116121800_Hello")]
    partial class Hello
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("E18I4DABH32D1Gr4.Models.Address", b =>
                {
                    b.Property<int>("addressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PersonId");

                    b.Property<int>("cityAtAddresscityId");

                    b.Property<string>("streetAddress");

                    b.HasKey("addressId");

                    b.HasIndex("PersonId");

                    b.HasIndex("cityAtAddresscityId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("E18I4DABH32D1Gr4.Models.City", b =>
                {
                    b.Property<int>("cityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cityName");

                    b.Property<string>("countryRegion");

                    b.Property<int>("zipCode");

                    b.HasKey("cityId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("E18I4DABH32D1Gr4.Models.Email", b =>
                {
                    b.Property<int>("emailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonId");

                    b.Property<string>("email");

                    b.HasKey("emailId");

                    b.HasIndex("PersonId");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("E18I4DABH32D1Gr4.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("PrimaryAddress_AddressId");

                    b.Property<int?>("addressId");

                    b.HasKey("PersonId");

                    b.HasIndex("addressId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("E18I4DABH32D1Gr4.Models.Address", b =>
                {
                    b.HasOne("E18I4DABH32D1Gr4.Models.Person")
                        .WithMany("PersonAddresses")
                        .HasForeignKey("PersonId");

                    b.HasOne("E18I4DABH32D1Gr4.Models.City", "cityAtAddress")
                        .WithMany("addressId")
                        .HasForeignKey("cityAtAddresscityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("E18I4DABH32D1Gr4.Models.Email", b =>
                {
                    b.HasOne("E18I4DABH32D1Gr4.Models.Person", "person")
                        .WithMany("Email")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("E18I4DABH32D1Gr4.Models.Person", b =>
                {
                    b.HasOne("E18I4DABH32D1Gr4.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("addressId");
                });
#pragma warning restore 612, 618
        }
    }
}
